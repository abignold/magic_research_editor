

function gunzipString(base64CompressedString) {
  try {
    // Decode the base64 string to a Uint8Array
    const compressedData = base64ToUint8Array(base64CompressedString);

    // Decompress the data using pako's inflate method
    const decompressedData = pako.inflate(compressedData);

    // Convert the decompressed data to a string
    const decompressedString = new TextDecoder().decode(decompressedData);

    return decompressedString;
  } catch (err) {
    console.error('Error during decompression:', err);
    return null;
  }
}

// Helper function to convert a base64 string to a Uint8Array
function base64ToUint8Array(base64String) {
  const binaryString = atob(base64String);
  const len = binaryString.length;
  const bytes = new Uint8Array(len);

  for (let i = 0; i < len; i++) {
    bytes[i] = binaryString.charCodeAt(i);
  }

  return bytes;
}

function decode_and_gunzip(input) {
  // Decode input using Base64 twice
  let decoded1 = atob(input);
  
  gunzipped = gunzipString(decoded1);

  // Return the result
  return gunzipped;
}

function handleImport() {
	document.getElementById("import_field").value = "";
	
        // Get the input from the first text field
        let input = document.getElementById('import_field').value;

        // Decode and gunzip the input
        let result = decode_and_gunzip(input);

        // Do something with the result
		console.log(result)
      }